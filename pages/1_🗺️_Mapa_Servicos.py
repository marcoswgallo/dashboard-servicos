import streamlit as st
import pandas as pd
import folium
from streamlit_folium import folium_static
from datetime import datetime, timedelta
from DB import DatabaseConnection

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Mapa de Servi√ßos",
    page_icon="üó∫Ô∏è",
    layout="wide"
)

# T√≠tulo
st.title("üó∫Ô∏è Mapa de Servi√ßos")

# Inicializar conex√£o com banco
db = DatabaseConnection()

# Filtros na sidebar
st.sidebar.title("üéØ Filtros")

# Datas
col1, col2 = st.sidebar.columns(2)

with col1:
    data_inicio = st.text_input(
        "üìÖ Data Inicial:",
        value="01/01/2025",
        help="Formato: DD/MM/YYYY"
    )

with col2:
    data_fim = st.text_input(
        "üìÖ Data Final:",
        value="28/01/2025",
        help="Formato: DD/MM/YYYY"
    )

# Carregar dados
df = db.execute_query(data_inicio, data_fim)

if df is not None and not df.empty:
    # Filtros adicionais
    col1, col2 = st.sidebar.columns(2)
    
    with col1:
        cidades = st.multiselect(
            "üèôÔ∏è Cidades:",
            options=sorted(df['CIDADES'].unique()),
            default=[]
        )
    
    with col2:
        tecnicos = st.multiselect(
            "üë®‚Äçüîß T√©cnicos:",
            options=sorted(df['TECNICO'].unique()),
            default=[]
        )
    
    # Aplicar filtros
    if cidades:
        df = df[df['CIDADES'].isin(cidades)]
    if tecnicos:
        df = df[df['TECNICO'].isin(tecnicos)]
    
    # Criar mapa
    st.subheader("üìç Localiza√ß√£o dos Servi√ßos")
    
    # Centro do mapa (m√©dia das coordenadas)
    center_lat = df['LATIDUDE'].mean()
    center_lon = df['LONGITUDE'].mean()
    
    # Criar mapa base
    m = folium.Map(
        location=[center_lat, center_lon],
        zoom_start=10,
        tiles='cartodbpositron'
    )
    
    # Adicionar marcadores
    for idx, row in df.iterrows():
        # Criar popup com informa√ß√µes
        popup_html = f"""
            <div style='min-width: 200px'>
                <b>Data:</b> {row['DATA_TOA'].strftime('%d/%m/%Y %H:%M')}<br>
                <b>T√©cnico:</b> {row['TECNICO']}<br>
                <b>Cidade:</b> {row['CIDADES']}<br>
                <b>Servi√ßo:</b> {row['SERVI√áO']}<br>
                <b>Status:</b> {row['STATUS']}<br>
                <b>Valor:</b> R$ {row['VALOR_T√âCNICO']:,.2f}
            </div>
        """
        
        # Adicionar marcador
        folium.CircleMarker(
            location=[row['LATIDUDE'], row['LONGITUDE']],
            radius=8,
            popup=folium.Popup(popup_html, max_width=300),
            color='red',
            fill=True,
            fill_color='red'
        ).add_to(m)
    
    # Exibir mapa
    folium_static(m, width=1200, height=600)
    
    # M√©tricas
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric(
            "Total de Servi√ßos",
            f"{len(df):,}",
            help="N√∫mero total de servi√ßos no per√≠odo e filtros selecionados"
        )
    
    with col2:
        valor_total = df['VALOR_T√âCNICO'].sum()
        st.metric(
            "Valor Total",
            f"R$ {valor_total:,.2f}",
            help="Soma dos valores dos servi√ßos"
        )
    
    with col3:
        media_valor = df['VALOR_T√âCNICO'].mean()
        st.metric(
            "Valor M√©dio",
            f"R$ {media_valor:,.2f}",
            help="Valor m√©dio por servi√ßo"
        )
    
    with col4:
        n_tecnicos = df['TECNICO'].nunique()
        st.metric(
            "T√©cnicos Ativos",
            f"{n_tecnicos}",
            help="N√∫mero de t√©cnicos que realizaram servi√ßos"
        )
    
    # Tabela de dados
    with st.expander("üìã Dados Detalhados"):
        st.dataframe(
            df[[
                'DATA_TOA', 'TECNICO', 'CIDADES', 'SERVI√áO', 
                'STATUS', 'VALOR_T√âCNICO'
            ]].sort_values('DATA_TOA', ascending=False),
            hide_index=True,
            use_container_width=True
        )

else:
    st.warning("Nenhum dado encontrado para o per√≠odo selecionado.")
